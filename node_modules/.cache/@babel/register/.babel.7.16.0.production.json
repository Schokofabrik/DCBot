{
  "{\"assumptions\":{},\"sourceRoot\":\"G:\\\\Pogramming shit\\\\DCBot\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"G:\\\\Pogramming shit\\\\DCBot\",\"filename\":\"G:\\\\Pogramming shit\\\\DCBot\\\\main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"G:\\\\Pogramming shit\\\\DCBot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0:production": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "G:\\Pogramming shit\\DCBot\\",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "G:\\Pogramming shit\\DCBot",
      "filename": "G:\\Pogramming shit\\DCBot\\main.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "browserslistConfigFile": false,
      "envName": "production",
      "root": "G:\\Pogramming shit\\DCBot",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-static-block",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-private-property-in-object",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-chaining",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Pogramming shit\\DCBot\\main.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "G:\\Pogramming shit\\DCBot\\main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Pogramming shit\\DCBot\\",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst Discord = require('discord.js');\n\nconst intents = new Discord.Intents(32767);\nconst client = new Discord.Client({\n  intents\n});\nclient.on('presenceUpdate', (oldMember, newMember) => {\n  // get a reference to all channels in the user's guild\n  try {\n    if (newMember.userId === '137894185809215488' && newMember.activities[0].name === 'League of Legends') {\n      let guildChannels = newMember.guild.channels; // find the channel you want, based off the channel name\n\n      guildChannels.cache.get('755787803475968082').send(`<@${newMember.userId}> https://cdn.discordapp.com/attachments/763053037332725790/887079338678321162/League_Player_Sighted1080P_HD.mp4`).catch(console.error);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n});\nclient.login('OTEzOTI1MDY4MDcyMDQ2NjE0.YaFlDA.jahFRoT-1xE4vmBEsOUYV1hFqxk');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiRGlzY29yZCIsInJlcXVpcmUiLCJpbnRlbnRzIiwiSW50ZW50cyIsImNsaWVudCIsIkNsaWVudCIsIm9uIiwib2xkTWVtYmVyIiwibmV3TWVtYmVyIiwidXNlcklkIiwiYWN0aXZpdGllcyIsIm5hbWUiLCJndWlsZENoYW5uZWxzIiwiZ3VpbGQiLCJjaGFubmVscyIsImNhY2hlIiwiZ2V0Iiwic2VuZCIsImNhdGNoIiwiY29uc29sZSIsImVycm9yIiwibG9naW4iXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsT0FBTyxHQUFJQyxPQUFPLENBQUMsWUFBRCxDQUF4Qjs7QUFDQSxNQUFNQyxPQUFPLEdBQUcsSUFBSUYsT0FBTyxDQUFDRyxPQUFaLENBQW9CLEtBQXBCLENBQWhCO0FBQ0EsTUFBTUMsTUFBTSxHQUFHLElBQUlKLE9BQU8sQ0FBQ0ssTUFBWixDQUFtQjtBQUFDSCxFQUFBQTtBQUFELENBQW5CLENBQWY7QUFHQUUsTUFBTSxDQUFDRSxFQUFQLENBQVUsZ0JBQVYsRUFBNEIsQ0FBQ0MsU0FBRCxFQUFXQyxTQUFYLEtBQXlCO0FBQ2pEO0FBQ0EsTUFBRztBQUNILFFBQUdBLFNBQVMsQ0FBQ0MsTUFBVixLQUFxQixvQkFBckIsSUFBNkNELFNBQVMsQ0FBQ0UsVUFBVixDQUFxQixDQUFyQixFQUF3QkMsSUFBeEIsS0FBaUMsbUJBQWpGLEVBQXFHO0FBR3JHLFVBQUlDLGFBQWEsR0FBR0osU0FBUyxDQUFDSyxLQUFWLENBQWdCQyxRQUFwQyxDQUhxRyxDQUtyRzs7QUFDQUYsTUFBQUEsYUFBYSxDQUFDRyxLQUFkLENBQW9CQyxHQUFwQixDQUF3QixvQkFBeEIsRUFDS0MsSUFETCxDQUNXLEtBQUlULFNBQVMsQ0FBQ0MsTUFBTyxrSEFEaEMsRUFFS1MsS0FGTCxDQUVXQyxPQUFPLENBQUNDLEtBRm5CO0FBR0c7QUFDRixHQVhELENBV0MsT0FBTUEsS0FBTixFQUFZO0FBQ1ZELElBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjQSxLQUFkO0FBQ0Y7QUFDSixDQWhCRDtBQWtCQWhCLE1BQU0sQ0FBQ2lCLEtBQVAsQ0FBYSw2REFBYiIsInNvdXJjZVJvb3QiOiJHOlxcUG9ncmFtbWluZyBzaGl0XFxEQ0JvdFxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRGlzY29yZCAgPSByZXF1aXJlKCdkaXNjb3JkLmpzJyk7XHJcbmNvbnN0IGludGVudHMgPSBuZXcgRGlzY29yZC5JbnRlbnRzKDMyNzY3KTtcclxuY29uc3QgY2xpZW50ID0gbmV3IERpc2NvcmQuQ2xpZW50KHtpbnRlbnRzfSk7XHJcblxyXG5cclxuY2xpZW50Lm9uKCdwcmVzZW5jZVVwZGF0ZScsIChvbGRNZW1iZXIsbmV3TWVtYmVyKSA9PiB7XHJcbiAgICAvLyBnZXQgYSByZWZlcmVuY2UgdG8gYWxsIGNoYW5uZWxzIGluIHRoZSB1c2VyJ3MgZ3VpbGRcclxuICAgIHRyeXtcclxuICAgIGlmKG5ld01lbWJlci51c2VySWQgPT09ICcxMzc4OTQxODU4MDkyMTU0ODgnICYmIG5ld01lbWJlci5hY3Rpdml0aWVzWzBdLm5hbWUgPT09ICdMZWFndWUgb2YgTGVnZW5kcycpe1xyXG5cclxuXHJcbiAgICBsZXQgZ3VpbGRDaGFubmVscyA9IG5ld01lbWJlci5ndWlsZC5jaGFubmVscztcclxuXHJcbiAgICAvLyBmaW5kIHRoZSBjaGFubmVsIHlvdSB3YW50LCBiYXNlZCBvZmYgdGhlIGNoYW5uZWwgbmFtZVxyXG4gICAgZ3VpbGRDaGFubmVscy5jYWNoZS5nZXQoJzc1NTc4NzgwMzQ3NTk2ODA4MicpXHJcbiAgICAgICAgLnNlbmQoYDxAJHtuZXdNZW1iZXIudXNlcklkfT4gaHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vYXR0YWNobWVudHMvNzYzMDUzMDM3MzMyNzI1NzkwLzg4NzA3OTMzODY3ODMyMTE2Mi9MZWFndWVfUGxheWVyX1NpZ2h0ZWQxMDgwUF9IRC5tcDRgKVxyXG4gICAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxyXG4gICAgICB9XHJcbiAgICB9Y2F0Y2goZXJyb3Ipe1xyXG4gICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuY2xpZW50LmxvZ2luKCdPVEV6T1RJMU1EWTRNRGN5TURRMk5qRTAuWWFGbERBLmphaEZSb1QtMXhFNHZtQkVzT1VZVjFoRnF4aycpO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "Discord",
        "require",
        "intents",
        "Intents",
        "client",
        "Client",
        "on",
        "oldMember",
        "newMember",
        "userId",
        "activities",
        "name",
        "guildChannels",
        "guild",
        "channels",
        "cache",
        "get",
        "send",
        "catch",
        "console",
        "error",
        "login"
      ],
      "mappings": ";;AAAA,MAAMA,OAAO,GAAIC,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMC,OAAO,GAAG,IAAIF,OAAO,CAACG,OAAZ,CAAoB,KAApB,CAAhB;AACA,MAAMC,MAAM,GAAG,IAAIJ,OAAO,CAACK,MAAZ,CAAmB;AAACH,EAAAA;AAAD,CAAnB,CAAf;AAGAE,MAAM,CAACE,EAAP,CAAU,gBAAV,EAA4B,CAACC,SAAD,EAAWC,SAAX,KAAyB;AACjD;AACA,MAAG;AACH,QAAGA,SAAS,CAACC,MAAV,KAAqB,oBAArB,IAA6CD,SAAS,CAACE,UAAV,CAAqB,CAArB,EAAwBC,IAAxB,KAAiC,mBAAjF,EAAqG;AAGrG,UAAIC,aAAa,GAAGJ,SAAS,CAACK,KAAV,CAAgBC,QAApC,CAHqG,CAKrG;;AACAF,MAAAA,aAAa,CAACG,KAAd,CAAoBC,GAApB,CAAwB,oBAAxB,EACKC,IADL,CACW,KAAIT,SAAS,CAACC,MAAO,kHADhC,EAEKS,KAFL,CAEWC,OAAO,CAACC,KAFnB;AAGG;AACF,GAXD,CAWC,OAAMA,KAAN,EAAY;AACVD,IAAAA,OAAO,CAACC,KAAR,CAAcA,KAAd;AACF;AACJ,CAhBD;AAkBAhB,MAAM,CAACiB,KAAP,CAAa,6DAAb",
      "sourceRoot": "G:\\Pogramming shit\\DCBot\\",
      "sourcesContent": [
        "const Discord  = require('discord.js');\r\nconst intents = new Discord.Intents(32767);\r\nconst client = new Discord.Client({intents});\r\n\r\n\r\nclient.on('presenceUpdate', (oldMember,newMember) => {\r\n    // get a reference to all channels in the user's guild\r\n    try{\r\n    if(newMember.userId === '137894185809215488' && newMember.activities[0].name === 'League of Legends'){\r\n\r\n\r\n    let guildChannels = newMember.guild.channels;\r\n\r\n    // find the channel you want, based off the channel name\r\n    guildChannels.cache.get('755787803475968082')\r\n        .send(`<@${newMember.userId}> https://cdn.discordapp.com/attachments/763053037332725790/887079338678321162/League_Player_Sighted1080P_HD.mp4`)\r\n        .catch(console.error)\r\n      }\r\n    }catch(error){\r\n       console.error(error);\r\n    }\r\n});\r\n\r\nclient.login('OTEzOTI1MDY4MDcyMDQ2NjE0.YaFlDA.jahFRoT-1xE4vmBEsOUYV1hFqxk');\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1638004441099
  }
}